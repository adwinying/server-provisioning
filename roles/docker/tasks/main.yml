---
# Configure docker

- name: Install aptitude using apt
  apt:
    name: aptitude
    state: latest
    update_cache: yes
    force_apt_get: yes
  become: yes

- name: Install required system packages
  apt:
    name: "{{ item }}"
    state: latest
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    - python3-pip
    - virtualenv
    - python3-setuptools
    - libffi-dev
    - libssl-dev
  become: yes

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: yes

- name: Get ubuntu release name
  shell: lsb_release -cs
  register: ubuntu_release_name

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu {{ ubuntu_release_name.stdout }} stable
    state: present
  become: yes

- name: Update apt and install Docker
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  loop:
    - docker-ce
    - docker-ce-cli
  become: yes

- name: Create group named "docker"
  group:
    name: docker
    state: present
  become: yes

- name: Run docker without sudo
  user:
    name: "{{ server_username }}"
    groups: docker
    append: yes
    state: present
  become: yes

- name: Install Docker compose
  pip:
    name: docker-compose
    state: present
  become: yes

- name: Start docker on boot
  systemd:
    name: docker
    enabled: yes
    masked: no
  become: yes
  notify:
    - Restart docker service

- name: Clone docker config repo
  git:
    repo: git@github.com:adwinying/nas-docker.git
    dest: ~/nas-docker
    version: master
    accept_hostkey: yes

- name: Start docker containers
  docker_compose:
    project_src: ~/nas-docker
    state: present

- name: Schedule docker images to update every day
  cron:
    name: Update docker images
    minute: '0'
    hour: '5'
    job: (bash /home/{{ server_username }}/nas-docker/update-services.sh) >> /home/{{ server_username }}/nas-docker/cron.log 2>&1 && curl -fsS --retry 3 {{ docker_healthcheck_endpoint }}
